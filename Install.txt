
Requirements
============

1. Interpreter (mandatory)

   EITHER: 

     A recent version of GNU Octave.
     http://www.gnu.org/software/octave

     The optim package from Octaveforge
     http://octave.sourceforge.net.
     
     This will need to be installed separately.
     If you have an Internet connection this can be done
     easily from the Octave command line using
     
     $ pkg install -forge optim 
     
   OR 

     MathWorks MATLAB
     http://www.mathworks.co.uk/products/matlab

2. Gmsh (recommended)

   http://geuz.org/gmsh

   While the code all operates without Gmsh installed it is not very 
   easy to use without it for constructing and viewing meshes.

3. The nlopt package (optional) 

   http://ab-initio.mit.edu/wiki/index.php/NLopt

4. CMake (optional)

   http://www.cmake.org

   CMake is used to configure, install and test the package, however, the 
   installation can easily be done manually. See below.

5. HDF5 (optional)

   http://www.hdfgroup.org/HDF5/

   The command line tools from the HDF5 package are required 
   for AMELET-HDF support. On Linux these are often provided 
   in a package called hdf5-tools.

6. Mercurial (optional)

   http://mercurial.selenic.com

   The upstream source is mantained in a Mercurial repository.


Quick Start On Linux
====================

0. If using GNU Octave add the lines

   if( exist( './startup.m' , 'file' ) )
     startup
   end %if

   to the initialisation file ~/.octaverc. This makes Octave read a startup.m
   file in the current working directory when is is started. This is required
   by the test-suite for setting paths to m-files.

1. EITHER: Use mercurial to clone the source code repository on Bitbucket:

   $ hg clone ssh://hg@bitbucket.org/uoyaeg/aegmesher aegmesher-working

   OR 

   Download a zip file of the source code from

   https://bitbucket.org/uoyaeg/aegmesher/downloads

   and unzip it into a directory call aegmesher-working

   $ unzip aeg-aegmesher-x12ey12ey.zip
   $ mv aeg-aegmesher-x12ey12ey aegmesher-working

2. Run tests:

   $ mkdir aegmesher-build_linux_$(arch)
   $ cd aegmesher-build_linux_$(arch)
   $ cmake -D CMAKE_INSTALL_PREFIX=$HOME -D WITH_MESHER=ON -D WITH_GMSH=ON -D WITH_AMELET=ON -D WITH_CONCEPT=ON -D WITH_GVULTURE=ON ../aegmesher-working
   $ make
   $ make test

   The test output is logged to the file Testing/Temporary/LastTest.log.
   
   Specific tests can be run using:

   $ ctest -R "WireBox_*" -D ExperimentalTest

   To run specific tests logging full output to file (useful for debugging):

   $ ctest -V -R "BLADE1_*" -D ExperimentalTest | tee output.txt

   NOTE: Currently the tests will pass providing all the elements of the test to completion
   without error. No check is made yet of the correctness or even sanity of the final output meshes.

3. Install the software with

   $ make install

   This will install the m-files in CMAKE_INSTALL_PREFIX/share/octave/packages/mesh
   which should then be added to your MATLAB/Octave path.


Manual Install
==============

At the end of step 1 above copy the sub-directory mesh from the aegmesher-working directory
to somewhere convenient and add it to your Octave/MATLAB path.
